% Generated by roxygen2 (4.0.2): do not edit by hand
\name{match.hotdeck}
\alias{match.hotdeck}
\title{Match two 'filetomatch' objects via distance hot-deck}
\usage{
match.hotdeck(x = "filetomatch", y = "filetomatch", ...)
}
\arguments{
\item{x}{\code{filetomatch} object}

\item{y}{\code{filetomatch} object}

\item{dist.fun}{distance function. Default is "Gower"}

\item{constrained}{logical (\code{TRUE} or \code{FALSE}). Default is \code{FALSE}.}
}
\value{
A \code{\link{fusedfile}} object for which \code{data} contains complete observations
from the receptor file.

Missing values are filled via distance hot-deck imputation by means of
\code{NDD.hotdeck} function from \code{StatMatch} package.
}
\description{
\code{math.hotdeck} takes two \code{\link{filetomatch}} objects
and produces a \code{\link{fusedfile}} object with complete \code{data} for the
object playing the \code{receptor} role.
}
\details{
In the resulting \code{\link{fusedfile}} object, \code{data} contains
all rows (observations) and columns (variables) in the object acting as \code{receptor},
Additionaly the resulting \code{fusedfile} will store additional information, namely:

\itemize{
     \item \code{origin_specvars} with the source of \code{specvars} in the original files, in this case, the object acting as \code{receptor}.
     \item \code{origin_weights} stores the source of \code{weights} in the original files, in this case, the object acting as \code{receptor}.
}

The missing values are filled via hot-deck imputation.

Specifically, function \code{NND.hotdeck} from \code{StatMatch} package is used. This function
finds a donor record for each receptor record. In the unconstrained case it searches for the
closest donor
}
\seealso{
Other "Apply matching method": \code{\link{concatenate}};
  \code{\link{fusedfile-class}}
}

